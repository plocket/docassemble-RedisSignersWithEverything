---
modules:
  - docassemble.VirtualCourtToolbox.shortenURL
---
include:
  - remote_sign_on_device.yml
  - docassemble.MAVirtualCourt:basic-questions.yml
---
objects:
  - redis: DARedis
  #- all_signers: DAList.using(object_type=Individual, auto_gather=False)
  - all_signers: PeopleList.using(auto_gather=False)
  #- others: DAList.using(object_type=Individual, auto_gather=False)
  - others: PeopleList.using(auto_gather=False)
  - action_data: DADict
  #- action_data[ 'parties' ] = DADict
  - signers_by_id: DADict
---
mandatory: True
code: |
  # Save data to redis
  # action_id (unique to this set of people), user_id, party_id
  # Send link generated by something. The remote interview entrypoint?
  # Start the remote entrypoint. Has a mandatory block.
  # Remote entrypoint uses remote_sign_on_device.yml to get signature. Can customize questions and data.

  action_id = get_random_chars() # legal_action
  
  # redist.set_data( 'action_id', { parties: {}, preview: doc, }, expire=3)
  # url_args needed: action_id, party_id, user_id

  users[0].name.first
  users.gathered = True
  users.there_is_another = False
  action_data[ 'user_id' ] = users[0].id

  others[0].name.first
  others.gathered = True
  others.there_is_another = False

  all_signers = others #users + others
  for signer in all_signers:
    signers_by_id[ signer.id ] = signer
  all_signers.gathered = True
  all_signers.there_is_another = False
  action_data[ 'parties' ] = DADict()
  action_data[ 'parties' ] = signers_by_id

  # Since it's one big namespace, I think each of these legal actions need their own namespace.
  # Interview/ document/ contract/ occasion/ event/ session/ consult/ case/ action /process/ ?? id
  #   preview
  #   signed document
  #   signers/parties = {by id}
  #     signature
  #     willing_to_sign
  #     signature_date
  # TODO: Discuss - This sort of looks like there's only one user per interview, so maybe we don't need a list of users.

  action_data[ 'preview' ] = signature_doc
  others[0].sign_on_device
---
  
---
id: sms template multiuser
generic object: Individual
template: x.sms_template
content: |
  Dear ${ x },
  You decided to sign the document on this device. Go to ${ x.sign_url } to sign your document
---
generic object: Individual
question: |
  Name
fields:
  - First: x.name.first
---
generic object: Individual
code: |
  x.sign_url = shortenMe( interview_url_action('sign_on_device', action_id=action_id )).shortenedURL
---
id: document
event: x.status
generic object: Individual
prevent going back: True
question: |
  Test document signatures for ${ users[0] }
subquestion: |
  ${ signature_doc }
---
attachment:
  name: Signatures doc
  variable name: signature_doc
  filename: signatures
  docx template file: test-signatures.docx
---